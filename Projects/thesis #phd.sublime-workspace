{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"c",
				"cmd"
			],
			[
				"it",
				"item"
			],
			[
				"par",
				"\\part"
			],
			[
				"se",
				"section"
			],
			[
				"cur",
				"cursor"
			],
			[
				"ZK_",
				"ZK_DB_PATH"
			],
			[
				"ZK",
				"ZK_PATH"
			],
			[
				"db",
				"db_connection"
			],
			[
				"exi",
				"exist_ok="
			],
			[
				"Z",
				"ZK_DB"
			],
			[
				"outpu",
				"output_path"
			],
			[
				"defau",
				"default_config_path"
			],
			[
				"confi",
				"write_default_config"
			],
			[
				"defa",
				"default_config_path"
			],
			[
				"config",
				"default_config_path"
			],
			[
				"add_",
				"add_argument"
			],
			[
				"con",
				"config"
			],
			[
				"wri",
				"write_text"
			],
			[
				"update_",
				"update_note"
			],
			[
				"is_",
				"is_note_id_unique"
			],
			[
				"upda",
				"update_note_tags"
			],
			[
				"check",
				"check_valid_tag_path"
			],
			[
				"delete",
				"delete_stmt"
			],
			[
				"update_note",
				"update_note_links"
			],
			[
				"add_ta",
				"add_new_tag_path"
			],
			[
				"get_tag",
				"get_tag_path_id"
			],
			[
				"add_no",
				"add_note_tag"
			],
			[
				"che",
				"check_valid_tag_path"
			],
			[
				"get_ta",
				"get_tag_path_id"
			],
			[
				"add",
				"add_new_tag_path"
			],
			[
				"new_pat",
				"new_path_parent_id"
			],
			[
				"retu",
				"return_new_id="
			],
			[
				"new_path_par",
				"new_path_parent_id"
			],
			[
				"new_ta",
				"new_tag_path"
			],
			[
				"de",
				"deque"
			],
			[
				"new_path_p",
				"new_path_parent_id"
			],
			[
				"new_t",
				"new_tag_path"
			],
			[
				"new_path",
				"new_path_parent"
			],
			[
				"link",
				"link_pattern"
			],
			[
				"pars",
				"parse_note_body"
			],
			[
				"make",
				"make_new_note"
			],
			[
				"pare",
				"parent_note_id"
			],
			[
				"new",
				"make_new_note"
			],
			[
				"name",
				"namedtuple"
			],
			[
				"no",
				"note_name"
			],
			[
				"parse",
				"parse_note_name"
			],
			[
				"utc",
				"utcnow"
			],
			[
				"fo",
				"frontmatter"
			],
			[
				"make_",
				"make_note_file_name"
			],
			[
				"parse_no",
				"parse_note_name"
			],
			[
				"Note",
				"NoteName"
			],
			[
				"classmet",
				"classmethod"
			],
			[
				"pane",
				"pane_for_opening_results  \tsetting"
			],
			[
				"uu",
				"uuid\tmodule"
			],
			[
				"nu",
				"numpy\tmodule"
			],
			[
				"auto",
				"auto_show_images  \tsetting"
			],
			[
				"wi",
				"wiki_extension  \tsetting"
			],
			[
				"H",
				"Hz\tstatement"
			],
			[
				"Time",
				"TimedArray\tclass"
			],
			[
				"surr",
				"surr_resp\tstatement"
			],
			[
				"retur",
				"return_cent_surr"
			],
			[
				"cent_",
				"cent_stim_prod\tstatement"
			],
			[
				"fft",
				"fftconvolve\tfunction"
			],
			[
				"return",
				"return_t\tparam"
			],
			[
				"temp_ex",
				"temp_ext\tparam"
			],
			[
				"tau",
				"tau2\tparam"
			],
			[
				"mkTem",
				"mkTempFilt"
			],
			[
				"bar",
				"bar_lum\tparam"
			],
			[
				"spat_",
				"spat_ext"
			],
			[
				"temp_re",
				"temp_freq"
			],
			[
				"pep",
				"pep8_error_levels  \tsetting"
			],
			[
				"stim_",
				"stim_min\tparam"
			],
			[
				"coo",
				"coord_transform\tfunction"
			],
			[
				"zero",
				"zero_center\tparam"
			],
			[
				"surr_sd_",
				"surr_sd_vt\tstatement"
			],
			[
				"sd",
				"sd_vt\tstatement"
			],
			[
				"lesion_dep",
				"lesion_depths_cut_plane\tstatement"
			],
			[
				"px",
				"px_scale"
			],
			[
				"lesion",
				"lesion_depths_cut_plane\tparam"
			],
			[
				"lesion_de",
				"lesion_depths_cut_plane"
			],
			[
				"Themis",
				"ThemisDirectory\tstatement"
			],
			[
				"mk",
				"mk_themis_files_directory\tfunction"
			],
			[
				"mk_ce",
				"mk_cell_id_from_run_key\tfunction"
			],
			[
				"use",
				"use_previous_load\tparam"
			],
			[
				"previousl",
				"previous_load_path"
			],
			[
				"score",
				"scorer\tparam"
			],
			[
				"gen_",
				"gen_sign_index\tfunction"
			],
			[
				"analysis",
				"analysisData\tstatement"
			],
			[
				"the",
				"themis\tmodule"
			],
			[
				"run",
				"run_key\tparam"
			],
			[
				"themis_",
				"themis_obj\tparam"
			],
			[
				"gen",
				"get_on_off_resp"
			],
			[
				"ana",
				"analysisFuncKeys"
			],
			[
				"biph",
				"biphase_split_point"
			],
			[
				"dl_",
				"dl_sum"
			],
			[
				"x_lim",
				"x_lim_sig_ratio\tstatement"
			],
			[
				"anal",
				"analData\tparam"
			],
			[
				"from_",
				"from_dict\tfunction"
			],
			[
				"analDd",
				"analDataDF\tstatement"
			],
			[
				"a",
				"analData\tstatement"
			],
			[
				"fr",
				"from_dict\tfunction"
			],
			[
				"Cel",
				"CellData\tstatement"
			],
			[
				"Run",
				"RUN_KEY"
			],
			[
				"Mu",
				"MultiIndex\tclass"
			],
			[
				"C",
				"CELL_ID"
			],
			[
				"TDCCat",
				"TDCCatalogue\tstatement"
			],
			[
				"TDCC",
				"TDCCatalogue\tstatement"
			],
			[
				"TDC_s",
				"TDC_signals_medians"
			],
			[
				"exc_res",
				"exc_result2\tstatement"
			],
			[
				"mk_",
				"mk_cell_key\tfunction"
			],
			[
				"filt",
				"filtered_data\tparam"
			],
			[
				"iter",
				"iterable\tparam"
			],
			[
				"curve",
				"curveFuncs\tmodule"
			],
			[
				"Cu",
				"CurveFuncs\tstatement"
			],
			[
				"Cur",
				"CurveFits\tstatement"
			],
			[
				"S",
				"SavePath"
			],
			[
				"cu",
				"curveFuncs\tstatement"
			],
			[
				"cell",
				"cell_data_key\tparam"
			],
			[
				"_pre_omit_ma",
				"_pre_omit_marker_codes\tstatement"
			],
			[
				"_pre_",
				"_pre_omit_marker_codes\tstatement"
			],
			[
				"omit_",
				"omit_trials\tparam"
			],
			[
				"omit",
				"omit_trials"
			],
			[
				"edge",
				"edgecolor"
			],
			[
				"line",
				"linestyle"
			],
			[
				"biphase",
				"biphase_split_point"
			],
			[
				"conditions_tri",
				"conditions_trials_hist"
			],
			[
				"spont",
				"spont_rate"
			],
			[
				"parameter",
				"parameters"
			]
		]
	},
	"buffers":
	[
		{
			"file": "/Users/errollloyd/Science/PhD/thesis/thesis.tex",
			"settings":
			{
				"buffer_size": 1431,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					3,
					1,
					"paste",
					null,
					"AQAAAAAAAAAAAAAA0wEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/"
				],
				[
					6,
					1,
					"toggle_comment",
					{
						"block": false
					},
					"AQAAAMIBAAAAAAAAxAEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAwgEAAAAAAADCAQAAAAAAAAAAAAAAAAAA"
				],
				[
					11,
					1,
					"sequence",
					{
						"commands":
						[
							[
								"run_macro_file",
								{
									"file": "res://Packages/Default/Add Line.sublime-macro",
									"register": "\""
								}
							],
							[
								"insert",
								{
									"characters": "\n"
								}
							],
							[
								"paste",
								null
							]
						]
					},
					"AwAAANQBAAAAAAAA1QEAAAAAAAAAAAAA1QEAAAAAAADWAQAAAAAAAAAAAADWAQAAAAAAAF0CAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAxAEAAAAAAADEAQAAAAAAAAAAAAAAAPC/"
				],
				[
					19,
					1,
					"unexpand_tabs",
					{
						"set_translate_tabs": true
					},
					"AQAAAAAAAAAAAAAATwIAAAAAAABeAgAAXGRvY3VtZW50Y2xhc3NbMTJwdF17cmVwb3J0fQoKXHVzZXBhY2thZ2V7YXJyYXl9Clx1c2VwYWNrYWdle2Ftc2ZvbnRzfQolIFx1c2VwYWNrYWdle3RleHRjb21wfQolXHVzZXBhY2thZ2VbcGFyZmlsbF17cGFyc2tpcH0KXHVzZXBhY2thZ2V7Z2VvbWV0cnl9ICUgc2VlIGdlb21ldHJ5LnBkZiBvbiBob3cgdG8gbGF5IG91dCB0aGUgcGFnZS4gVGhlcmUncyBsb3RzLgpcZ2VvbWV0cnl7YTRwYXBlcn0gJSBvciBsZXR0ZXIgb3IgYTVwYXBlciBvciAuLi4gZXRjCiUgXGdlb21ldHJ5e2xhbmRzY2FwZX0gJSByb3RhdGVkIHBhZ2UgZ2VvbWV0cnkKCiUgU2VlIHRoZSBgYEFydGljbGUgY3VzdG9taXNlJycgdGVtcGxhdGUgZm9yIGNvbWUgY29tbW9uIGN1c3RvbWlzYXRpb25zCgpcdXNlcGFja2FnZXthbXNtYXRofQolIFx1c2VwYWNrYWdle2Jvb2t0YWJzfQpcdXNlcGFja2FnZXtlbnVtaXRlbX0KJSBcc2V0bGlzdGRlcHRoezl9CgpcdXNlcGFja2FnZXtoeXBlcnJlZn0KXGh5cGVyc2V0dXB7CiAgICBjb2xvcmxpbmtzLAogICAgY2l0ZWNvbG9yPWJsYWNrLAogICAgZmlsZWNvbG9yPWJsYWNrLAogICAgbGlua2NvbG9yPWJsYWNrLAogICAgdXJsY29sb3I9YmxhY2sKfQoK",
					"AQAAAAAAAAABAAAA+QEAAAAAAAD5AQAAAAAAAAAAAAAAAPC/"
				],
				[
					24,
					1,
					"sequence",
					{
						"commands":
						[
							[
								"run_macro_file",
								{
									"file": "res://Packages/Default/Add Line.sublime-macro",
									"register": "\""
								}
							],
							[
								"paste",
								null
							]
						]
					},
					"AgAAAE8CAAAAAAAAUAIAAAAAAAAAAAAAUAIAAAAAAABJAwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAATwIAAAAAAABPAgAAAAAAAAAAAAAAAPC/"
				],
				[
					30,
					1,
					"sequence",
					{
						"commands":
						[
							[
								"run_macro_file",
								{
									"file": "res://Packages/Default/Add Line.sublime-macro",
									"register": "\""
								}
							],
							[
								"insert",
								{
									"characters": "\n"
								}
							],
							[
								"paste",
								null
							]
						]
					},
					"AwAAAEkDAAAAAAAASgMAAAAAAAAAAAAASgMAAAAAAABLAwAAAAAAAAAAAABLAwAAAAAAAHsDAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAASQMAAAAAAABJAwAAAAAAAAAAAAAAAPC/"
				],
				[
					40,
					1,
					"sequence",
					{
						"commands":
						[
							[
								"run_macro_file",
								{
									"file": "res://Packages/Default/Add Line.sublime-macro",
									"register": "\""
								}
							],
							[
								"insert",
								{
									"characters": "\n"
								}
							],
							[
								"toggle_comment",
								{
									"block": false
								}
							],
							[
								"insert",
								{
									"characters": "Title"
								}
							],
							[
								"insert",
								{
									"characters": " page"
								}
							],
							[
								"exit_insert_mode",
								null
							]
						]
					},
					"DQAAAEkDAAAAAAAASgMAAAAAAAAAAAAASgMAAAAAAABLAwAAAAAAAAAAAABLAwAAAAAAAE0DAAAAAAAAAAAAAE0DAAAAAAAATgMAAAAAAAAAAAAATgMAAAAAAABPAwAAAAAAAAAAAABPAwAAAAAAAFADAAAAAAAAAAAAAFADAAAAAAAAUQMAAAAAAAAAAAAAUQMAAAAAAABSAwAAAAAAAAAAAABSAwAAAAAAAFMDAAAAAAAAAAAAAFMDAAAAAAAAVAMAAAAAAAAAAAAAVAMAAAAAAABVAwAAAAAAAAAAAABVAwAAAAAAAFYDAAAAAAAAAAAAAFYDAAAAAAAAVwMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAASQMAAAAAAABJAwAAAAAAAAAAAAAAAAAA"
				],
				[
					45,
					1,
					"sequence",
					{
						"commands":
						[
							[
								"insert",
								{
									"characters": ">"
								}
							],
							[
								"insert",
								{
									"characters": " "
								}
							],
							[
								"exit_insert_mode",
								null
							]
						]
					},
					"AgAAAE0DAAAAAAAATgMAAAAAAAAAAAAATgMAAAAAAABPAwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAATQMAAAAAAABNAwAAAAAAAAAAAAAAAPC/"
				],
				[
					50,
					2,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Add Line Before.sublime-macro"
					},
					"AgAAAAAAAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAABAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/"
				],
				[
					59,
					1,
					"sequence",
					{
						"commands":
						[
							[
								"insert",
								{
									"characters": "\n"
								}
							],
							[
								"toggle_comment",
								{
									"block": false
								}
							],
							[
								"insert",
								{
									"characters": ">"
								}
							],
							[
								"insert",
								{
									"characters": " Docu"
								}
							],
							[
								"insert",
								{
									"characters": "ment"
								}
							],
							[
								"insert",
								{
									"characters": " CLass"
								}
							],
							[
								"left_delete",
								null
							],
							[
								"left_delete",
								null
							],
							[
								"left_delete",
								null
							],
							[
								"left_delete",
								null
							],
							[
								"insert",
								{
									"characters": "lass"
								}
							],
							[
								"exit_insert_mode",
								null
							]
						]
					},
					"GgAAAAAAAAAAAAAAAQAAAAAAAAAAAAAAAQAAAAAAAAADAAAAAAAAAAAAAAADAAAAAAAAAAQAAAAAAAAAAAAAAAQAAAAAAAAABQAAAAAAAAAAAAAABQAAAAAAAAAGAAAAAAAAAAAAAAAGAAAAAAAAAAcAAAAAAAAAAAAAAAcAAAAAAAAACAAAAAAAAAAAAAAACAAAAAAAAAAJAAAAAAAAAAAAAAAJAAAAAAAAAAoAAAAAAAAAAAAAAAoAAAAAAAAACwAAAAAAAAAAAAAACwAAAAAAAAAMAAAAAAAAAAAAAAAMAAAAAAAAAA0AAAAAAAAAAAAAAA0AAAAAAAAADgAAAAAAAAAAAAAADgAAAAAAAAAPAAAAAAAAAAAAAAAPAAAAAAAAABAAAAAAAAAAAAAAABAAAAAAAAAAEQAAAAAAAAAAAAAAEQAAAAAAAAASAAAAAAAAAAAAAAASAAAAAAAAABMAAAAAAAAAAAAAABIAAAAAAAAAEgAAAAAAAAABAAAAcxEAAAAAAAAAEQAAAAAAAAABAAAAcxAAAAAAAAAAEAAAAAAAAAABAAAAYQ8AAAAAAAAADwAAAAAAAAABAAAATA8AAAAAAAAAEAAAAAAAAAAAAAAAEAAAAAAAAAARAAAAAAAAAAAAAAARAAAAAAAAABIAAAAAAAAAAAAAABIAAAAAAAAAEwAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"
				],
				[
					69,
					1,
					"sequence",
					{
						"commands":
						[
							[
								"run_macro_file",
								{
									"file": "res://Packages/Default/Add Line.sublime-macro",
									"register": "\""
								}
							],
							[
								"insert",
								{
									"characters": "#"
								}
							],
							[
								"left_delete",
								null
							],
							[
								"toggle_comment",
								{
									"block": false
								}
							],
							[
								"insert",
								{
									"characters": ">"
								}
							],
							[
								"insert",
								{
									"characters": " Packages"
								}
							],
							[
								"insert",
								{
									"characters": "\n"
								}
							]
						]
					},
					"DwAAADIAAAAAAAAAMwAAAAAAAAAAAAAAMwAAAAAAAAA0AAAAAAAAAAAAAAAzAAAAAAAAADMAAAAAAAAAAQAAACMzAAAAAAAAADUAAAAAAAAAAAAAADUAAAAAAAAANgAAAAAAAAAAAAAANgAAAAAAAAA3AAAAAAAAAAAAAAA3AAAAAAAAADgAAAAAAAAAAAAAADgAAAAAAAAAOQAAAAAAAAAAAAAAOQAAAAAAAAA6AAAAAAAAAAAAAAA6AAAAAAAAADsAAAAAAAAAAAAAADsAAAAAAAAAPAAAAAAAAAAAAAAAPAAAAAAAAAA9AAAAAAAAAAAAAAA9AAAAAAAAAD4AAAAAAAAAAAAAAD4AAAAAAAAAPwAAAAAAAAAAAAAAPwAAAAAAAABAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAMgAAAAAAAAAyAAAAAAAAAAAAAAAAAGFA"
				],
				[
					78,
					1,
					"sequence",
					{
						"commands":
						[
							[
								"run_macro_file",
								{
									"file": "res://Packages/Default/Add Line.sublime-macro",
									"register": "\""
								}
							],
							[
								"insert",
								{
									"characters": "\n"
								}
							]
						]
					},
					"AgAAAK4DAAAAAAAArwMAAAAAAAAAAAAArwMAAAAAAACwAwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAArgMAAAAAAACuAwAAAAAAAAAAAAAAAPC/"
				],
				[
					83,
					1,
					"sequence",
					{
						"commands":
						[
							[
								"toggle_comment",
								{
									"block": false
								}
							],
							[
								"insert",
								{
									"characters": ">"
								}
							],
							[
								"insert",
								{
									"characters": " Document"
								}
							],
							[
								"exit_insert_mode",
								null
							]
						]
					},
					"CwAAALADAAAAAAAAsgMAAAAAAAAAAAAAsgMAAAAAAACzAwAAAAAAAAAAAACzAwAAAAAAALQDAAAAAAAAAAAAALQDAAAAAAAAtQMAAAAAAAAAAAAAtQMAAAAAAAC2AwAAAAAAAAAAAAC2AwAAAAAAALcDAAAAAAAAAAAAALcDAAAAAAAAuAMAAAAAAAAAAAAAuAMAAAAAAAC5AwAAAAAAAAAAAAC5AwAAAAAAALoDAAAAAAAAAAAAALoDAAAAAAAAuwMAAAAAAAAAAAAAuwMAAAAAAAC8AwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAsAMAAAAAAACwAwAAAAAAAAAAAAAAAPC/"
				],
				[
					85,
					1,
					"sequence",
					{
						"commands":
						[
							[
								"run_macro_file",
								{
									"file": "res://Packages/Default/Add Line.sublime-macro",
									"register": "\""
								}
							],
							[
								"insert",
								{
									"characters": "\n"
								}
							]
						]
					},
					"AgAAALwDAAAAAAAAvQMAAAAAAAAAAAAAvQMAAAAAAAC+AwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAuwMAAAAAAAC7AwAAAAAAAAAAAAAAAPC/"
				],
				[
					87,
					1,
					"vi_paste_right",
					null,
					"AQAAAL4DAAAAAAAALwUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAvgMAAAAAAAC+AwAAAAAAAAAAAAAAAPC/"
				],
				[
					95,
					1,
					"sequence",
					{
						"commands":
						[
							[
								"insert",
								{
									"characters": ">"
								}
							],
							[
								"exit_insert_mode",
								null
							]
						]
					},
					"AQAAADQEAAAAAAAANQQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAANAQAAAAAAAA0BAAAAAAAAAAAAAAAAPC/"
				],
				[
					99,
					1,
					"vi_eval",
					{
						"action_args":
						{
						},
						"action_command": "vi_delete",
						"motion_args":
						{
							"to": "line"
						},
						"motion_clip_to_line": false,
						"motion_command": "expand_selection",
						"motion_inclusive": false,
						"motion_mode": 0
					},
					"AQAAAB4FAAAAAAAAHgUAAAAAAAABAAAACg",
					"AQAAAAAAAAABAAAAHgUAAAAAAAAeBQAAAAAAAAAAAAAAAAAA"
				],
				[
					103,
					1,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Add Line.sublime-macro",
						"register": "\""
					},
					"AQAAAHEEAAAAAAAAcgQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAcQQAAAAAAABxBAAAAAAAAAAAAAAAAAAA"
				],
				[
					110,
					1,
					"toggle_comment",
					{
						"block": false
					},
					"AgAAAPEEAAAAAAAA8wQAAAAAAAAAAAAA3AQAAAAAAADeBAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA3AQAAAAAAAAIBQAAAAAAAAAAAAAAAAAA"
				],
				[
					132,
					1,
					"sequence",
					{
						"commands":
						[
							[
								"run_macro_file",
								{
									"file": "res://Packages/Default/Add Line.sublime-macro",
									"register": "\""
								}
							],
							[
								"insert",
								{
									"characters": "?"
								}
							],
							[
								"left_delete",
								null
							],
							[
								"toggle_comment",
								{
									"block": false
								}
							],
							[
								"insert",
								{
									"characters": "Still"
								}
							],
							[
								"insert",
								{
									"characters": " possible>"
								}
							],
							[
								"left_delete",
								null
							],
							[
								"insert",
								{
									"characters": "????"
								}
							],
							[
								"move",
								{
									"by": "words",
									"forward": false
								}
							],
							[
								"move",
								{
									"by": "wordends",
									"forward": true
								}
							],
							[
								"move",
								{
									"by": "characters",
									"forward": false
								}
							],
							[
								"move",
								{
									"by": "characters",
									"forward": true
								}
							],
							[
								"insert",
								{
									"characters": ","
								}
							],
							[
								"insert",
								{
									"characters": " even"
								}
							],
							[
								"insert",
								{
									"characters": " at"
								}
							],
							[
								"insert",
								{
									"characters": " a"
								}
							],
							[
								"insert",
								{
									"characters": " basic"
								}
							],
							[
								"insert",
								{
									"characters": " level"
								}
							],
							[
								"insert",
								{
									"characters": " "
								}
							],
							[
								"exit_insert_mode",
								null
							]
						]
					},
					"MAAAANsEAAAAAAAA3AQAAAAAAAAAAAAA3AQAAAAAAADdBAAAAAAAAAAAAADcBAAAAAAAANwEAAAAAAAAAQAAAD/cBAAAAAAAAN4EAAAAAAAAAAAAAN4EAAAAAAAA3wQAAAAAAAAAAAAA3wQAAAAAAADgBAAAAAAAAAAAAADgBAAAAAAAAOEEAAAAAAAAAAAAAOEEAAAAAAAA4gQAAAAAAAAAAAAA4gQAAAAAAADjBAAAAAAAAAAAAADjBAAAAAAAAOQEAAAAAAAAAAAAAOQEAAAAAAAA5QQAAAAAAAAAAAAA5QQAAAAAAADmBAAAAAAAAAAAAADmBAAAAAAAAOcEAAAAAAAAAAAAAOcEAAAAAAAA6AQAAAAAAAAAAAAA6AQAAAAAAADpBAAAAAAAAAAAAADpBAAAAAAAAOoEAAAAAAAAAAAAAOoEAAAAAAAA6wQAAAAAAAAAAAAA6wQAAAAAAADsBAAAAAAAAAAAAADsBAAAAAAAAO0EAAAAAAAAAAAAAOwEAAAAAAAA7AQAAAAAAAABAAAAPuwEAAAAAAAA7QQAAAAAAAAAAAAA7QQAAAAAAADuBAAAAAAAAAAAAADuBAAAAAAAAO8EAAAAAAAAAAAAAO8EAAAAAAAA8AQAAAAAAAAAAAAA7AQAAAAAAADtBAAAAAAAAAAAAADtBAAAAAAAAO4EAAAAAAAAAAAAAO4EAAAAAAAA7wQAAAAAAAAAAAAA7wQAAAAAAADwBAAAAAAAAAAAAADwBAAAAAAAAPEEAAAAAAAAAAAAAPEEAAAAAAAA8gQAAAAAAAAAAAAA8gQAAAAAAADzBAAAAAAAAAAAAADzBAAAAAAAAPQEAAAAAAAAAAAAAPQEAAAAAAAA9QQAAAAAAAAAAAAA9QQAAAAAAAD2BAAAAAAAAAAAAAD2BAAAAAAAAPcEAAAAAAAAAAAAAPcEAAAAAAAA+AQAAAAAAAAAAAAA+AQAAAAAAAD5BAAAAAAAAAAAAAD5BAAAAAAAAPoEAAAAAAAAAAAAAPoEAAAAAAAA+wQAAAAAAAAAAAAA+wQAAAAAAAD8BAAAAAAAAAAAAAD8BAAAAAAAAP0EAAAAAAAAAAAAAP0EAAAAAAAA/gQAAAAAAAAAAAAA/gQAAAAAAAD/BAAAAAAAAAAAAAD/BAAAAAAAAAAFAAAAAAAAAAAAAAAFAAAAAAAAAQUAAAAAAAAAAAAAAQUAAAAAAAACBQAAAAAAAAAAAAACBQAAAAAAAAMFAAAAAAAAAAAAAAMFAAAAAAAABAUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA2wQAAAAAAADbBAAAAAAAAAAAAAAAAGhA"
				],
				[
					139,
					1,
					"sequence",
					{
						"commands":
						[
							[
								"insert",
								{
									"characters": " just"
								}
							],
							[
								"insert",
								{
									"characters": " copying"
								}
							],
							[
								"insert",
								{
									"characters": " current"
								}
							],
							[
								"insert",
								{
									"characters": " data"
								}
							],
							[
								"exit_insert_mode",
								null
							]
						]
					},
					"GgAAAAMFAAAAAAAABAUAAAAAAAAAAAAABAUAAAAAAAAFBQAAAAAAAAAAAAAFBQAAAAAAAAYFAAAAAAAAAAAAAAYFAAAAAAAABwUAAAAAAAAAAAAABwUAAAAAAAAIBQAAAAAAAAAAAAAIBQAAAAAAAAkFAAAAAAAAAAAAAAkFAAAAAAAACgUAAAAAAAAAAAAACgUAAAAAAAALBQAAAAAAAAAAAAALBQAAAAAAAAwFAAAAAAAAAAAAAAwFAAAAAAAADQUAAAAAAAAAAAAADQUAAAAAAAAOBQAAAAAAAAAAAAAOBQAAAAAAAA8FAAAAAAAAAAAAAA8FAAAAAAAAEAUAAAAAAAAAAAAAEAUAAAAAAAARBQAAAAAAAAAAAAARBQAAAAAAABIFAAAAAAAAAAAAABIFAAAAAAAAEwUAAAAAAAAAAAAAEwUAAAAAAAAUBQAAAAAAAAAAAAAUBQAAAAAAABUFAAAAAAAAAAAAABUFAAAAAAAAFgUAAAAAAAAAAAAAFgUAAAAAAAAXBQAAAAAAAAAAAAAXBQAAAAAAABgFAAAAAAAAAAAAABgFAAAAAAAAGQUAAAAAAAAAAAAAGQUAAAAAAAAaBQAAAAAAAAAAAAAaBQAAAAAAABsFAAAAAAAAAAAAABsFAAAAAAAAHAUAAAAAAAAAAAAAHAUAAAAAAAAdBQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAAwUAAAAAAAADBQAAAAAAAAAAAAAAAPC/"
				],
				[
					158,
					1,
					"toggle_comment",
					{
						"block": false
					},
					"BAAAAMoEAAAAAAAAzAQAAAAAAAAAAAAAqgQAAAAAAACsBAAAAAAAAAAAAACRBAAAAAAAAJMEAAAAAAAAAAAAAHMEAAAAAAAAdQQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAcgQAAAAAAADaBAAAAAAAAAAAAAAAAAAA"
				],
				[
					165,
					1,
					"toggle_comment",
					{
						"block": false
					},
					"AgAAAJMEAAAAAAAAkwQAAAAAAAACAAAAJSBzBAAAAAAAAHMEAAAAAAAAAgAAACUg",
					"AQAAAAAAAAABAAAAcwQAAAAAAACsBAAAAAAAAAAAAAAAAAAA"
				],
				[
					174,
					1,
					"toggle_comment",
					{
						"block": false
					},
					"AgAAAJEEAAAAAAAAkwQAAAAAAAAAAAAAcwQAAAAAAAB1BAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAqQQAAAAAAAByBAAAAAAAAAAAAAAAAAAA"
				],
				[
					179,
					1,
					"toggle_comment",
					{
						"block": false
					},
					"AgAAANAEAAAAAAAA0AQAAAAAAAACAAAAJSCuBAAAAAAAAK4EAAAAAAAAAgAAACUg",
					"AQAAAAAAAAABAAAArQQAAAAAAADiBAAAAAAAAAAAAAAAAAAA"
				],
				[
					187,
					3,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Add Line Before.sublime-macro"
					},
					"AwAAAG4DAAAAAAAAbwMAAAAAAAAAAAAAbgMAAAAAAABvAwAAAAAAAAAAAABuAwAAAAAAAG8DAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAbgMAAAAAAABuAwAAAAAAAAAAAAAAAPC/"
				],
				[
					193,
					1,
					"sequence",
					{
						"commands":
						[
							[
								"toggle_comment",
								{
									"block": false
								}
							],
							[
								"insert",
								{
									"characters": ">>"
								}
							],
							[
								"insert",
								{
									"characters": " Customu"
								}
							],
							[
								"left_delete",
								null
							],
							[
								"insert",
								{
									"characters": "isation"
								}
							],
							[
								"exit_insert_mode",
								null
							]
						]
					},
					"EwAAAG4DAAAAAAAAcAMAAAAAAAAAAAAAcAMAAAAAAABxAwAAAAAAAAAAAABxAwAAAAAAAHIDAAAAAAAAAAAAAHIDAAAAAAAAcwMAAAAAAAAAAAAAcwMAAAAAAAB0AwAAAAAAAAAAAAB0AwAAAAAAAHUDAAAAAAAAAAAAAHUDAAAAAAAAdgMAAAAAAAAAAAAAdgMAAAAAAAB3AwAAAAAAAAAAAAB3AwAAAAAAAHgDAAAAAAAAAAAAAHgDAAAAAAAAeQMAAAAAAAAAAAAAeQMAAAAAAAB6AwAAAAAAAAAAAAB5AwAAAAAAAHkDAAAAAAAAAQAAAHV5AwAAAAAAAHoDAAAAAAAAAAAAAHoDAAAAAAAAewMAAAAAAAAAAAAAewMAAAAAAAB8AwAAAAAAAAAAAAB8AwAAAAAAAH0DAAAAAAAAAAAAAH0DAAAAAAAAfgMAAAAAAAAAAAAAfgMAAAAAAAB/AwAAAAAAAAAAAAB/AwAAAAAAAIADAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAbgMAAAAAAABuAwAAAAAAAAAAAAAAAAAA"
				],
				[
					195,
					1,
					"sequence",
					{
						"commands":
						[
							[
								"run_macro_file",
								{
									"file": "res://Packages/Default/Add Line.sublime-macro",
									"register": "\""
								}
							],
							[
								"insert",
								{
									"characters": "\n"
								}
							]
						]
					},
					"AgAAAIADAAAAAAAAgQMAAAAAAAAAAAAAgQMAAAAAAACCAwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAfwMAAAAAAAB/AwAAAAAAAAAAAAAAAPC/"
				],
				[
					198,
					1,
					"vi_paste_right",
					null,
					"AQAAAIMDAAAAAAAA1wMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAggMAAAAAAACCAwAAAAAAAAAAAAAAAPC/"
				],
				[
					200,
					1,
					"vi_eval",
					{
						"action_args":
						{
						},
						"action_command": "vi_delete",
						"motion_args":
						{
							"to": "line"
						},
						"motion_clip_to_line": false,
						"motion_command": "expand_selection",
						"motion_inclusive": false,
						"motion_mode": 0
					},
					"AQAAAIIDAAAAAAAAggMAAAAAAAABAAAACg",
					"AQAAAAAAAAABAAAAggMAAAAAAACCAwAAAAAAAAAAAAAAAAAA"
				],
				[
					204,
					1,
					"unindent",
					null,
					"AQAAAKADAAAAAAAAoAMAAAAAAAACAAAAICA",
					"AQAAAAAAAAABAAAAoAMAAAAAAACgAwAAAAAAAAAAAAAAAAAA"
				],
				[
					205,
					1,
					"indent",
					null,
					"AQAAAKADAAAAAAAAoQMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAoAMAAAAAAACgAwAAAAAAAAAAAAAAAPC/"
				],
				[
					208,
					1,
					"sequence",
					{
						"commands":
						[
							[
								"insert",
								{
									"characters": "\n"
								}
							],
							[
								"exit_insert_mode",
								null
							]
						]
					},
					"AgAAANMDAAAAAAAA1AMAAAAAAAAAAAAA1AMAAAAAAADVAwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA0wMAAAAAAADTAwAAAAAAAAAAAAAAAPC/"
				],
				[
					215,
					1,
					"paste",
					null,
					"AgAAAIIDAAAAAAAAFhUAAAAAAAAAAAAAFhUAAAAAAAAWFQAAAAAAAFUAAABccHJvdmlkZWNvbW1hbmR7XHRpZ2h0bGlzdH17JQoJXHNldGxlbmd0aHtcaXRlbXNlcH17MHB0fVxzZXRsZW5ndGh7XHBhcnNraXB9ezBwdH0KCX0K",
					"AQAAAAAAAAABAAAAggMAAAAAAADXAwAAAAAAAAAAAAAAAAAA"
				],
				[
					291,
					1,
					"sequence",
					{
						"commands":
						[
							[
								"enter_visual_line_mode",
								null
							],
							[
								"vi_eval",
								{
									"action_args": null,
									"action_command": null,
									"motion_args":
									{
										"by": "stops",
										"empty_line": true,
										"extend": true,
										"forward": true,
										"separators": "",
										"word_begin": false
									},
									"motion_clip_to_line": false,
									"motion_command": "move",
									"motion_inclusive": false,
									"motion_mode": 2
								}
							],
							[
								"vi_eval",
								{
									"action_args": null,
									"action_command": null,
									"motion_args":
									{
										"by": "stops",
										"empty_line": true,
										"extend": true,
										"forward": true,
										"separators": "",
										"word_begin": false
									},
									"motion_clip_to_line": false,
									"motion_command": "move",
									"motion_inclusive": false,
									"motion_mode": 2
								}
							],
							[
								"vi_eval",
								{
									"action_args": null,
									"action_command": null,
									"motion_args":
									{
										"by": "lines",
										"extend": true,
										"forward": false
									},
									"motion_clip_to_line": false,
									"motion_command": "move",
									"motion_inclusive": false,
									"motion_mode": 2
								}
							],
							[
								"vi_eval",
								{
									"action_args": null,
									"action_command": null,
									"motion_args":
									{
										"by": "lines",
										"extend": true,
										"forward": false
									},
									"motion_clip_to_line": false,
									"motion_command": "move",
									"motion_inclusive": false,
									"motion_mode": 2
								}
							],
							[
								"vi_eval",
								{
									"action_args":
									{
									},
									"action_command": "vi_delete",
									"motion_args": null,
									"motion_clip_to_line": false,
									"motion_command": null,
									"motion_inclusive": false,
									"motion_mode": 2
								}
							]
						]
					},
					"AQAAAIIDAAAAAAAAggMAAAAAAACVEQAAJSBPcHRpb25zIGZvciBwYWNrYWdlcyBsb2FkZWQgZWxzZXdoZXJlClxQYXNzT3B0aW9uc1RvUGFja2FnZXt1bmljb2RlfXtoeXBlcnJlZn0KXFBhc3NPcHRpb25zVG9QYWNrYWdle2h5cGhlbnN9e3VybH0KJQpcdXNlcGFja2FnZXthbXNtYXRoLGFtc3N5bWJ9Clx1c2VwYWNrYWdle2xtb2Rlcm59Clx1c2VwYWNrYWdle2lmeGV0ZXgsaWZsdWF0ZXh9ClxpZm51bSAwXGlmeGV0ZXggMVxmaVxpZmx1YXRleCAxXGZpPTAgJSBpZiBwZGZ0ZXgKICBcdXNlcGFja2FnZVtUMV17Zm9udGVuY30KICBcdXNlcGFja2FnZVt1dGY4XXtpbnB1dGVuY30KICBcdXNlcGFja2FnZXt0ZXh0Y29tcH0gJSBwcm92aWRlIGV1cm8gYW5kIG90aGVyIHN5bWJvbHMKXGVsc2UgJSBpZiBsdWF0ZXggb3IgeGV0ZXgKICBcdXNlcGFja2FnZXt1bmljb2RlLW1hdGh9CiAgXGRlZmF1bHRmb250ZmVhdHVyZXN7U2NhbGU9TWF0Y2hMb3dlcmNhc2V9CiAgXGRlZmF1bHRmb250ZmVhdHVyZXNbXHJtZmFtaWx5XXtMaWdhdHVyZXM9VGVYLFNjYWxlPTF9ClxmaQolIFVzZSB1cHF1b3RlIGlmIGF2YWlsYWJsZSwgZm9yIHN0cmFpZ2h0IHF1b3RlcyBpbiB2ZXJiYXRpbSBlbnZpcm9ubWVudHMKXElmRmlsZUV4aXN0c3t1cHF1b3RlLnN0eX17XHVzZXBhY2thZ2V7dXBxdW90ZX19e30KXElmRmlsZUV4aXN0c3ttaWNyb3R5cGUuc3R5fXslIHVzZSBtaWNyb3R5cGUgaWYgYXZhaWxhYmxlCiAgXHVzZXBhY2thZ2VbXXttaWNyb3R5cGV9CiAgXFVzZU1pY3JvdHlwZVNldFtwcm90cnVzaW9uXXtiYXNpY21hdGh9ICUgZGlzYWJsZSBwcm90cnVzaW9uIGZvciB0dCBmb250cwp9e30KXG1ha2VhdGxldHRlcgpcQGlmdW5kZWZpbmVke0tPTUFDbGFzc05hbWV9eyUgaWYgbm9uLUtPTUEgY2xhc3MKICBcSWZGaWxlRXhpc3Rze3BhcnNraXAuc3R5fXslCiAgICBcdXNlcGFja2FnZXtwYXJza2lwfQogIH17JSBlbHNlCiAgICBcc2V0bGVuZ3Roe1xwYXJpbmRlbnR9ezBwdH0KICAgIFxzZXRsZW5ndGh7XHBhcnNraXB9ezZwdCBwbHVzIDJwdCBtaW51cyAxcHR9fQp9eyUgaWYgS09NQSBjbGFzcwogIFxLT01Bb3B0aW9uc3twYXJza2lwPWhhbGZ9fQpcbWFrZWF0b3RoZXIKXHVzZXBhY2thZ2V7eGNvbG9yfQpcSWZGaWxlRXhpc3Rze3h1cmwuc3R5fXtcdXNlcGFja2FnZXt4dXJsfX17fSAlIGFkZCBVUkwgbGluZSBicmVha3MgaWYgYXZhaWxhYmxlClxJZkZpbGVFeGlzdHN7Ym9va21hcmsuc3R5fXtcdXNlcGFja2FnZXtib29rbWFya319e1x1c2VwYWNrYWdle2h5cGVycmVmfX0KXGh5cGVyc2V0dXB7CiAgaGlkZWxpbmtzLAogIHBkZmNyZWF0b3I9e0xhVGVYIHZpYSBwYW5kb2N9fQpcdXJsc3R5bGV7c2FtZX0gJSBkaXNhYmxlIG1vbm9zcGFjZWQgZm9udCBmb3IgVVJMcwpcdXNlcGFja2FnZXtjb2xvcn0KXHVzZXBhY2thZ2V7ZmFuY3l2cmJ9ClxuZXdjb21tYW5ke1xWZXJiQmFyfXt8fQpcbmV3Y29tbWFuZHtcVkVSQn17XFZlcmJbY29tbWFuZGNoYXJzPVxcXHtcfV19ClxEZWZpbmVWZXJiYXRpbUVudmlyb25tZW50e0hpZ2hsaWdodGluZ317VmVyYmF0aW19e2NvbW1hbmRjaGFycz1cXFx7XH19CiUgQWRkICcsZm9udHNpemU9XHNtYWxsJyBmb3IgbW9yZSBjaGFyYWN0ZXJzIHBlciBsaW5lClxuZXdlbnZpcm9ubWVudHtTaGFkZWR9e317fQpcbmV3Y29tbWFuZHtcQWxlcnRUb2t9WzFde1x0ZXh0Y29sb3JbcmdiXXsxLjAwLDAuMDAsMC4wMH17XHRleHRiZnsjMX19fQpcbmV3Y29tbWFuZHtcQW5ub3RhdGlvblRva31bMV17XHRleHRjb2xvcltyZ2JdezAuMzgsMC42MywwLjY5fXtcdGV4dGJme1x0ZXh0aXR7IzF9fX19ClxuZXdjb21tYW5ke1xBdHRyaWJ1dGVUb2t9WzFde1x0ZXh0Y29sb3JbcmdiXXswLjQ5LDAuNTYsMC4xNn17IzF9fQpcbmV3Y29tbWFuZHtcQmFzZU5Ub2t9WzFde1x0ZXh0Y29sb3JbcmdiXXswLjI1LDAuNjMsMC40NH17IzF9fQpcbmV3Y29tbWFuZHtcQnVpbHRJblRva31bMV17IzF9ClxuZXdjb21tYW5ke1xDaGFyVG9rfVsxXXtcdGV4dGNvbG9yW3JnYl17MC4yNSwwLjQ0LDAuNjN9eyMxfX0KXG5ld2NvbW1hbmR7XENvbW1lbnRUb2t9WzFde1x0ZXh0Y29sb3JbcmdiXXswLjM4LDAuNjMsMC42OX17XHRleHRpdHsjMX19fQpcbmV3Y29tbWFuZHtcQ29tbWVudFZhclRva31bMV17XHRleHRjb2xvcltyZ2JdezAuMzgsMC42MywwLjY5fXtcdGV4dGJme1x0ZXh0aXR7IzF9fX19ClxuZXdjb21tYW5ke1xDb25zdGFudFRva31bMV17XHRleHRjb2xvcltyZ2JdezAuNTMsMC4wMCwwLjAwfXsjMX19ClxuZXdjb21tYW5ke1xDb250cm9sRmxvd1Rva31bMV17XHRleHRjb2xvcltyZ2JdezAuMDAsMC40NCwwLjEzfXtcdGV4dGJmeyMxfX19ClxuZXdjb21tYW5ke1xEYXRhVHlwZVRva31bMV17XHRleHRjb2xvcltyZ2JdezAuNTYsMC4xMywwLjAwfXsjMX19ClxuZXdjb21tYW5ke1xEZWNWYWxUb2t9WzFde1x0ZXh0Y29sb3JbcmdiXXswLjI1LDAuNjMsMC40NH17IzF9fQpcbmV3Y29tbWFuZHtcRG9jdW1lbnRhdGlvblRva31bMV17XHRleHRjb2xvcltyZ2JdezAuNzMsMC4xMywwLjEzfXtcdGV4dGl0eyMxfX19ClxuZXdjb21tYW5ke1xFcnJvclRva31bMV17XHRleHRjb2xvcltyZ2JdezEuMDAsMC4wMCwwLjAwfXtcdGV4dGJmeyMxfX19ClxuZXdjb21tYW5ke1xFeHRlbnNpb25Ub2t9WzFdeyMxfQpcbmV3Y29tbWFuZHtcRmxvYXRUb2t9WzFde1x0ZXh0Y29sb3JbcmdiXXswLjI1LDAuNjMsMC40NH17IzF9fQpcbmV3Y29tbWFuZHtcRnVuY3Rpb25Ub2t9WzFde1x0ZXh0Y29sb3JbcmdiXXswLjAyLDAuMTYsMC40OX17IzF9fQpcbmV3Y29tbWFuZHtcSW1wb3J0VG9rfVsxXXsjMX0KXG5ld2NvbW1hbmR7XEluZm9ybWF0aW9uVG9rfVsxXXtcdGV4dGNvbG9yW3JnYl17MC4zOCwwLjYzLDAuNjl9e1x0ZXh0YmZ7XHRleHRpdHsjMX19fX0KXG5ld2NvbW1hbmR7XEtleXdvcmRUb2t9WzFde1x0ZXh0Y29sb3JbcmdiXXswLjAwLDAuNDQsMC4xM317XHRleHRiZnsjMX19fQpcbmV3Y29tbWFuZHtcTm9ybWFsVG9rfVsxXXsjMX0KXG5ld2NvbW1hbmR7XE9wZXJhdG9yVG9rfVsxXXtcdGV4dGNvbG9yW3JnYl17MC40MCwwLjQwLDAuNDB9eyMxfX0KXG5ld2NvbW1hbmR7XE90aGVyVG9rfVsxXXtcdGV4dGNvbG9yW3JnYl17MC4wMCwwLjQ0LDAuMTN9eyMxfX0KXG5ld2NvbW1hbmR7XFByZXByb2Nlc3NvclRva31bMV17XHRleHRjb2xvcltyZ2JdezAuNzQsMC40OCwwLjAwfXsjMX19ClxuZXdjb21tYW5ke1xSZWdpb25NYXJrZXJUb2t9WzFdeyMxfQpcbmV3Y29tbWFuZHtcU3BlY2lhbENoYXJUb2t9WzFde1x0ZXh0Y29sb3JbcmdiXXswLjI1LDAuNDQsMC42M317IzF9fQpcbmV3Y29tbWFuZHtcU3BlY2lhbFN0cmluZ1Rva31bMV17XHRleHRjb2xvcltyZ2JdezAuNzMsMC40MCwwLjUzfXsjMX19ClxuZXdjb21tYW5ke1xTdHJpbmdUb2t9WzFde1x0ZXh0Y29sb3JbcmdiXXswLjI1LDAuNDQsMC42M317IzF9fQpcbmV3Y29tbWFuZHtcVmFyaWFibGVUb2t9WzFde1x0ZXh0Y29sb3JbcmdiXXswLjEwLDAuMDksMC40OX17IzF9fQpcbmV3Y29tbWFuZHtcVmVyYmF0aW1TdHJpbmdUb2t9WzFde1x0ZXh0Y29sb3JbcmdiXXswLjI1LDAuNDQsMC42M317IzF9fQpcbmV3Y29tbWFuZHtcV2FybmluZ1Rva31bMV17XHRleHRjb2xvcltyZ2JdezAuMzgsMC42MywwLjY5fXtcdGV4dGJme1x0ZXh0aXR7IzF9fX19Clx1c2VwYWNrYWdle2dyYXBoaWN4fQpcbWFrZWF0bGV0dGVyClxkZWZcbWF4d2lkdGh7XGlmZGltXEdpbkBuYXRAd2lkdGg+XGxpbmV3aWR0aFxsaW5ld2lkdGhcZWxzZVxHaW5AbmF0QHdpZHRoXGZpfQpcZGVmXG1heGhlaWdodHtcaWZkaW1cR2luQG5hdEBoZWlnaHQ+XHRleHRoZWlnaHRcdGV4dGhlaWdodFxlbHNlXEdpbkBuYXRAaGVpZ2h0XGZpfQpcbWFrZWF0b3RoZXIKJSBTY2FsZSBpbWFnZXMgaWYgbmVjZXNzYXJ5LCBzbyB0aGF0IHRoZXkgd2lsbCBub3Qgb3ZlcmZsb3cgdGhlIHBhZ2UKJSBtYXJnaW5zIGJ5IGRlZmF1bHQsIGFuZCBpdCBpcyBzdGlsbCBwb3NzaWJsZSB0byBvdmVyd3JpdGUgdGhlIGRlZmF1bHRzCiUgdXNpbmcgZXhwbGljaXQgb3B0aW9ucyBpbiBcaW5jbHVkZWdyYXBoaWNzW3dpZHRoLCBoZWlnaHQsIC4uLl17fQpcc2V0a2V5c3tHaW59e3dpZHRoPVxtYXh3aWR0aCxoZWlnaHQ9XG1heGhlaWdodCxrZWVwYXNwZWN0cmF0aW99CiUgU2V0IGRlZmF1bHQgZmlndXJlIHBsYWNlbWVudCB0byBodGJwClxtYWtlYXRsZXR0ZXIKXGRlZlxmcHNAZmlndXJle2h0YnB9ClxtYWtlYXRvdGhlcgpcc2V0bGVuZ3Roe1xlbWVyZ2VuY3lzdHJldGNofXszZW19ICUgcHJldmVudCBvdmVyZnVsbCBsaW5lcwpccHJvdmlkZWNvbW1hbmR7XHRpZ2h0bGlzdH17JQogIFxzZXRsZW5ndGh7XGl0ZW1zZXB9ezBwdH1cc2V0bGVuZ3Roe1xwYXJza2lwfXswcHR9fQpcc2V0Y291bnRlcntzZWNudW1kZXB0aH17LVxtYXhkaW1lbn0gJSByZW1vdmUgc2VjdGlvbiBudW1iZXJpbmcKXGlmbHVhdGV4CiAgXHVzZXBhY2thZ2V7c2Vsbm9saWd9ICAlIGRpc2FibGUgaWxsZWdhbCBsaWdhdHVyZXMKXGZpCg",
					"AQAAAAAAAAABAAAAggMAAAAAAACCAwAAAAAAAAAAAAAAAAAA"
				],
				[
					334,
					1,
					"vi_eval",
					{
						"action_args":
						{
						},
						"action_command": "vi_right_delete",
						"motion_args":
						{
						},
						"motion_clip_to_line": false,
						"motion_command": null,
						"motion_inclusive": false,
						"motion_mode": 0
					},
					"AQAAADcDAAAAAAAANwMAAAAAAAABAAAAMg",
					"AQAAAAAAAAABAAAANwMAAAAAAAA3AwAAAAAAAAAAAAAAAPC/"
				],
				[
					353,
					1,
					"toggle_comment",
					{
						"block": false
					},
					"AQAAAE8DAAAAAAAAUQMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAATwMAAAAAAABPAwAAAAAAAAAAAAAAAAAA"
				],
				[
					371,
					1,
					"toggle_comment",
					{
						"block": false
					},
					"AQAAAAIEAAAAAAAABAQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAAwQAAAAAAAADBAAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"file": "/Users/errollloyd/Science/PhD/thesis/introduction.tex",
			"settings":
			{
				"buffer_size": 1195,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/Users/errollloyd/Science/PhD/thesis/plasticity.tex",
			"settings":
			{
				"buffer_size": 0,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
			]
		},
		{
			"file": "/Users/errollloyd/Science/PhD/thesis/hws.tex",
			"settings":
			{
				"buffer_size": 0,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					16,
					1,
					"vi_eval",
					{
						"action_args":
						{
							"insert_command": "vi_delete"
						},
						"action_command": "enter_insert_mode",
						"motion_args": null,
						"motion_clip_to_line": false,
						"motion_command": null,
						"motion_inclusive": false,
						"motion_mode": 0
					},
					"",
					"AQAAAAAAAAABAAAAAAAAAAAAAACWFQEAAAAAAAAAAAAAAPC/"
				]
			]
		}
	],
	"build_system": "Packages/User/pdflatex_bibtex_open.sublime-build",
	"build_system_choices":
	[
		[
			[
				[
					"Packages/LSP-TexLab/LSP-TexLab.sublime-build",
					""
				],
				[
					"Packages/User/simple_pdflatex.sublime-build",
					""
				]
			],
			[
				"Packages/LSP-TexLab/LSP-TexLab.sublime-build",
				""
			]
		],
		[
			[
				[
					"Packages/User/pdflatex_bibtex_open.sublime-build",
					""
				],
				[
					"Packages/User/simple_pdflatex.sublime-build",
					""
				]
			],
			[
				"Packages/User/pdflatex_bibtex_open.sublime-build",
				""
			]
		]
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 90.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"build with",
				"Build With: pdflatex_bibtex_open"
			],
			[
				"wrap",
				"Word Wrap: Toggle"
			],
			[
				"lsp",
				"LSP: Troubleshoot Server"
			],
			[
				"pack list",
				"Package Control: List Packages"
			],
			[
				"pack li",
				"Package Control: List Packages"
			],
			[
				"dup",
				"File Manager: Duplicate"
			],
			[
				"file dup",
				"File Manager: Duplicate"
			],
			[
				"inden",
				"Indentation: Convert to Tabs"
			],
			[
				"goto",
				"Goto Comment"
			],
			[
				"packdev",
				"PackageDev: Create Package"
			],
			[
				"texl",
				"Preferences: LSP-TexLab Settings"
			],
			[
				"pack inst",
				"Package Control: Install Package"
			],
			[
				"file ren",
				"Rename File"
			],
			[
				"file name",
				"File Manager: Copy Name"
			],
			[
				"folder",
				"Project: Add Folder"
			],
			[
				"build",
				"Build With: simple_pdflatex"
			],
			[
				"file move",
				"File Manager: Move"
			],
			[
				"proj man ad",
				"Project Manager: Add New Project"
			],
			[
				":w",
				":w - Save"
			],
			[
				"pack con in",
				"Package Control: Install Package"
			],
			[
				"pack con re",
				"Package Control: Remove Package"
			],
			[
				"pack con up",
				"Package Control: Upgrade Package"
			],
			[
				"pack con li",
				"Package Control: List Packages"
			],
			[
				"pack ",
				"Package Control: List Packages"
			],
			[
				"proj man",
				"Project Manager: Remove Project"
			],
			[
				"file get path",
				"File Manager: Copy Absolute Path"
			],
			[
				"file de",
				"File Manager: Delete"
			],
			[
				"book",
				"Bookmarks: Clear All"
			],
			[
				"file sp",
				"File: Split View"
			],
			[
				"split",
				"File: Split View"
			],
			[
				"key conf",
				"FindKeyConflicts: All Key Maps to Buffer"
			],
			[
				"pack instal",
				"Package Control: Install Package"
			],
			[
				"keybin",
				"Preferences: Terminus Key Bindings"
			],
			[
				"key bi",
				"Preferences: Key Bindings"
			],
			[
				"view",
				"File: Split View"
			],
			[
				"syntax pref",
				"Preferences: Settings – Syntax Specific"
			],
			[
				"mini",
				"View: Toggle Minimap"
			],
			[
				"file path",
				"File Manager: Copy Relative Path"
			],
			[
				"proj man add",
				"Project Manager: Add New Project"
			],
			[
				"rename",
				"Rename File"
			],
			[
				"k",
				"Preferences: Key Bindings"
			],
			[
				"zk pane",
				"ZK: Select Panes for opening notes/results"
			],
			[
				"zk new",
				"ZK: New Zettel Note"
			],
			[
				"pack co",
				"Package Control: List Packages"
			],
			[
				"zk sea",
				"ZK: Search for tag combination"
			],
			[
				"brack hi w",
				"BracketHighlighter: Wrap Selections with Brackets"
			],
			[
				"syntax sq",
				"Set Syntax: SQL"
			],
			[
				"zk pan",
				"ZK: Select Panes for opening notes/results"
			],
			[
				"zk",
				"ZK: Search for tag combination"
			],
			[
				"zk pa",
				"ZK: Select Panes for opening notes/results"
			],
			[
				"minim",
				"View: Toggle Minimap"
			],
			[
				"zk se",
				"ZK: Enter Zettelkasten Mode"
			],
			[
				"pack co en",
				"Package Control: Enable Package"
			],
			[
				"pack ins",
				"Package Control: Install Package"
			],
			[
				"z sea",
				"ZK: Search for tag combination"
			],
			[
				"pack res o",
				"PackageResourceViewer: Open Resource"
			],
			[
				"pack res",
				"PackageResourceViewer: Open Resource"
			],
			[
				"z",
				"ZK: Enter Zettelkasten Mode"
			],
			[
				"pack en",
				"Package Control: Enable Package"
			],
			[
				"pack res op",
				"PackageResourceViewer: Open Resource"
			],
			[
				"file na",
				"File: Copy Name"
			],
			[
				"open url",
				"Open URL: Settings"
			],
			[
				"pack in",
				"Package Control: Install Package"
			],
			[
				"open link",
				"Tasks: Open Link"
			],
			[
				"zk s",
				"ZK: Search for tag combination"
			],
			[
				"zk mo",
				"ZK: Enter Zettelkasten Mode"
			],
			[
				"zk im",
				"ZK: Show Images"
			],
			[
				"zk e",
				"ZK: Enter Zettelkasten Mode"
			],
			[
				"zk ci",
				"ZK: Insert Citation"
			],
			[
				"proj ad",
				"Project: Add Folder"
			],
			[
				"set z",
				"Set Syntax: Markdown Zettelkasten"
			],
			[
				"proj man ",
				"Project Manager: Import *.sublime-project File"
			],
			[
				"proj man ap",
				"Project Manager: Append Project"
			],
			[
				"file d",
				"File: Delete"
			],
			[
				"zk ren",
				"Set Syntax: Markdown Zettelkasten"
			],
			[
				"zk n",
				"ZK: New Zettel Note"
			],
			[
				"proj man n",
				"Project Manager: Add New Project"
			],
			[
				"pack co in",
				"Package Control: Install Package"
			],
			[
				"pack co add",
				"Package Control: Add Repository"
			],
			[
				"pack re",
				"Package Control: Remove Package"
			],
			[
				"sear",
				"Search Anywhere: From Selection"
			],
			[
				"pack remo",
				"Package Control: Remove Package"
			],
			[
				"incre",
				"Increment Selection"
			],
			[
				"pack rem",
				"Package Control: Remove Package"
			],
			[
				"diff",
				"Diff View: Run custom diff..."
			],
			[
				"pack",
				"Package Control: Remove Package"
			],
			[
				"origam",
				"Origami: Restore Saved Layout"
			],
			[
				"orig s",
				"Origami: Save Current Layout"
			],
			[
				"proj",
				"Project: Edit Project"
			],
			[
				"anaconda lint",
				"Anaconda: Enable linting on this file"
			],
			[
				"anaconda dis",
				"Anaconda: Disable linting on this file"
			],
			[
				"anaconda disa l",
				"Anaconda: Disable linting on this file"
			],
			[
				"packresvie",
				"PackageResourceViewer: Open Resource"
			],
			[
				"min",
				"View: Toggle Minimap"
			],
			[
				"anaconda st",
				"Anaconda: Set Python interpreter"
			],
			[
				"tasks",
				"Tasks: Filter by tags under cursors"
			],
			[
				"proj man edit",
				"Project Manager: Edit Project"
			],
			[
				"proj man ed",
				"Project Manager: Edit Project"
			],
			[
				"bra hi w",
				"BracketHighlighter: Wrap Selections with Brackets"
			],
			[
				"brack wr",
				"BracketHighlighter: Wrap Selections with Brackets"
			],
			[
				"proj man re",
				"Project Manager: Remove Project"
			],
			[
				"merge",
				"Sublime Merge: Open Repository"
			],
			[
				"view ",
				"View: Toggle Open Files in Side Bar"
			],
			[
				"brack",
				"BracketHighlighter: Jump to Right Bracket"
			],
			[
				"key",
				"Preferences: Key Bindings"
			],
			[
				"brack sw",
				"BracketHighlighter: Swap Quotes"
			],
			[
				"brack hi sw",
				"BracketHighlighter: Swap Brackets"
			],
			[
				"brackhi w",
				"BracketHighlighter: Wrap Selections with Brackets"
			],
			[
				"brackhi",
				"BracketHighlighter: Quick Start Guide"
			],
			[
				"terminus",
				"Preferences: Terminus Settings"
			],
			[
				"revert",
				"File: Revert"
			],
			[
				"pack ena",
				"Package Control: Enable Package"
			],
			[
				"pack dis",
				"Package Control: Disable Package"
			],
			[
				"git com",
				"Git: Commit"
			],
			[
				"git ad",
				"Git: Add..."
			],
			[
				"git stat",
				"Git: Status"
			],
			[
				"git st",
				"Git: Status"
			],
			[
				"wor",
				"Word Wrap: Toggle"
			],
			[
				"git add",
				"Git: Add Current File"
			],
			[
				"git co",
				"Git: Commit"
			],
			[
				"word",
				"Word Wrap: Toggle"
			],
			[
				"proj e",
				"Project: Edit Project"
			],
			[
				"pack op er",
				"PackageResourceViewer: Open Resource"
			],
			[
				"pack con rem",
				"Package Control: Remove Package"
			],
			[
				"pack co rem",
				"Package Control: Remove Package"
			],
			[
				"ana co",
				"Anaconda: McCabe complexity check"
			],
			[
				"pack co dis",
				"Package Control: Disable Package"
			],
			[
				"anaconda com",
				"Anaconda: McCabe complexity check"
			]
		],
		"width": 476.0
	},
	"console":
	{
		"height": 242.0,
		"history":
		[
			"sublime.log_commands(False)",
			"sublime.log_commands(True)",
			"sublime.log_commands(False)",
			"sublime.log_commands(True)",
			"sublime.log_commands(False)",
			"sublime.log_commands(True)",
			"sublime.log_commands(False)",
			"view.file_name()",
			"view",
			"sublime.log_commands(True)",
			"sublime.view_commands(True)",
			"sublime.log_commands(False)",
			"sublime.log_commands(True)",
			"sublime.log_commands(False)",
			"sublime.log_commands(True)",
			"sublime.log_commands(False)",
			"sublime.log_commands()",
			"sublime.log_commands(False)",
			"sublime.log_commands(True)",
			"sublime.log_commands(False)",
			"sublime.log_commands(True)",
			"sublime.log_commands(False)",
			"sublime.log_commands(True)",
			"askdjfh",
			"kjdfhskdfjh",
			"skdjfhdskjfh",
			"import socket; socket.socket(socket.AF_INET, socket.SOCK_STREAM).connect((\"localhost\", 49226))",
			"sublime.log_commands(False)",
			"sublime.log_commands(True)",
			"sublime.run_command('resize_pane', {\"orientation\": \"cols\"})",
			"sublime.run_command('resize_pane')",
			"sublime.log_commands(True)",
			"sublime.log_commands(True",
			"sublime.log_commands(True)",
			"sublime.log_commadns(True)",
			"s;dfjh",
			";soadfh",
			"ldfskj",
			"sublime.log_commands(False)",
			"sublime.run_command('phd_dates')",
			"sublime.run_command('rb_hours_sum')",
			"sublime.run_command(rb_hours_sum)",
			"sublime.run_command(phd_dates)",
			"sublime.run_command(phd_dates_command)",
			"sublime.run_command(phd_dates)",
			"s.get('font_size')",
			"s = sublime.load_settings(\"Preferences.sublime-settings\")",
			"st = sublime.load_settings()",
			"sublime",
			"sublime.get_setting('font_size')",
			"sublime.log_commands(True)",
			"sublime.log_commands(False)",
			"sublime.log_commands(True)",
			"sublime.log_commands(False)",
			"sublime.log_commands(True)",
			"sublime.run_command(plain_tasks_calendar)",
			"sublime.log_commands(True)",
			"sublime.log_commands(False)",
			"sublime.log_commands(True)",
			"sublime.log_commands(False)",
			"sublime.log_commands(True)",
			"sublime.log_commands(False)",
			"\n#Totals\n\ntotal,0\n\nsublime.list_commands(False)",
			"print(test)",
			"test",
			"test = test + '\\nworld'",
			"test = 'hello'",
			"sublime.run_command(\"run_macro_file\", {\"file\": \"res://Packages/Default/Add Line Before.sublime-macro\"})",
			"sublime",
			"test.strip() == None",
			"test.strip() == False",
			"test.strip() == ''",
			"test",
			"test.strip()",
			"test",
			"test = \"\\n\"",
			"test",
			"test = '\\n'",
			"test.strip()",
			"test",
			"\n#Totals\ntest = ' '",
			"sublime_plugin.TextCommand.view",
			"sublime_plugin.TextCommand",
			"import sublime_plugin",
			"import sublime_pluging as sp",
			"sublime_plugin",
			"sublime",
			"self.view.symbols()",
			"view.run_command('my_example')",
			"view.command('duplicate_line')",
			"view.run(\"duplicate_line\")",
			"vie",
			"import socket; socket.socket(socket.AF_INET, socket.SOCK_STREAM).connect((\"localhost\", 60708))",
			"import urllib.request,os,hashlib; h = 'df21e130d211cfc94d9b0905775a7c0f' + '1e3d39e33b79698005270310898eea76'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://packagecontrol.io/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by)",
			"print('hello world')",
			"collections.Counter([1, 1, 2, 2, 3, 1, 1, ])",
			"collections.Counter()",
			"import collections",
			"dir()",
			"import this"
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/Users/errollloyd/Science/PhD/thesis"
	],
	"file_history":
	[
		"/Users/errollloyd/Library/Application Support/Sublime Text/Packages/User/pdflatex_bibtex_open.sublime-build",
		"/Users/errollloyd/Science/PhD/thesis/thesis.log",
		"/Users/errollloyd/Science/PhD/thesis/old/thesis.tex",
		"/Users/errollloyd/Science/PhD/thesis/thesis.pdf",
		"/Users/errollloyd/Science/PhD/thesis/old/hws.tex",
		"/Users/errollloyd/Science/PhD/thesis/old/plasticity.tex",
		"/Users/errollloyd/Science/PhD/thesis/hws.tex",
		"/Users/errollloyd/Science/PhD/thesis/len_tuning.tex",
		"/Users/errollloyd/Science/PhD/thesis/plasticity.tex",
		"/Users/errollloyd/Science/PhD/thesis/thesis.tex",
		"/Users/errollloyd/Science/PhD/thesis/introduction.tex",
		"/Volumes/MagellanX/University/Master_of_Science/Thesis/thesis_final/Thesis.tex",
		"/Users/errollloyd/Dropbox (Personal)/Science/papers/plast_v1_paper2/vc.tex",
		"/Users/errollloyd/Library/Application Support/Sublime Text/Packages/User/simple_pdflatex.sublime-build",
		"/Users/errollloyd/Dropbox (Personal)/Science/PhD/project_notes/HW_v_Sagar/general_thoughts.md",
		"/Users/errollloyd/Dropbox (Personal)/Science/PhD/project_notes/HW_v_Sagar/general_thoughts.tex",
		"/Users/errollloyd/Dropbox (Personal)/Science/PhD/project_notes/len_tuning/general_thoughts.tex",
		"/Users/errollloyd/Dropbox (Personal)/Science/PhD/project_notes/len_tuning/general_thoughts.md",
		"/Users/errollloyd/Dropbox (Personal)/Science/PhD/project_notes/plasticity/general_thoughts.tex",
		"/Users/errollloyd/Dropbox (Personal)/Science/PhD/project_notes/plasticity/general_thoughts.md",
		"/Users/errollloyd/Developer/zekell/zekell_sqlite/.zekell_config.json",
		"/Users/errollloyd/Developer/zekell/zekell_sqlite/test.ini",
		"/Users/errollloyd/Developer/zekell/zekell_sqlite/zekell.py",
		"/Users/errollloyd/Developer/zekell/zekell_sqlite/prototype/20211019103824 first_note.md",
		"/Users/errollloyd/Developer/zekell/zekell_sqlite/pyright_test.py",
		"/Users/errollloyd/Developer/zekell/zekell_sqlite/notes.md",
		"/Users/errollloyd/Developer/zekell/zekell_sqlite/schema.sql",
		"/Users/errollloyd/Developer/zekell/zekell_sqlite/test.py",
		"/Users/errollloyd/Developer/zekell/zekell_sqlite/proto_nb.py",
		"/Users/errollloyd/Developer/zekell/todo.todo",
		"/Users/errollloyd/Developer/zekell/.gitignore",
		"/Users/errollloyd/Documents/zettelkasten/20200911173049 SQLite.mdzk",
		"/Users/errollloyd/Documents/zettelkasten/20200911173110 Basics.mdzk",
		"/Users/errollloyd/Documents/zettelkasten/20200911174812 zettelkasten-sqlite.mdzk",
		"/Users/errollloyd/Documents/zettelkasten/20201022131145 Notable Examples.mdzk",
		"/Users/errollloyd/Documents/zettelkasten/20201022132815 Good References.mdzk",
		"/Users/errollloyd/Documents/zettelkasten/20201009191039 sublime_zk usage.mdzk",
		"/Users/errollloyd/Documents/zettelkasten/20201009191618 Custom Addtions.mdzk",
		"/Users/errollloyd/Documents/zettelkasten/20200922152119 Culture.mdzk",
		"/Users/errollloyd/Documents/zettelkasten/20201025110953 Human Life.mdzk",
		"/Users/errollloyd/Documents/zettelkasten/20201009182253 Listing branches and remotes.mdzk",
		"/Users/errollloyd/Documents/zettelkasten/20200911124826 Ideas.mdzk",
		"/Users/errollloyd/Documents/zettelkasten/20201022131122 Data Visualisation.mdzk",
		"/Users/errollloyd/Documents/zettelkasten/20201016154437 Core.mdzk",
		"/Users/errollloyd/Documents/zettelkasten/20201012164648 Front-end.mdzk",
		"/Users/errollloyd/Documents/zettelkasten/20201012164222 Online Git Tutorial.mdzk",
		"/Users/errollloyd/Documents/zettelkasten/20200911124910 Shift-Tab for Basic.mdzk",
		"/Users/errollloyd/Documents/zettelkasten/20201022170033 Explorable on Colour Perception.mdzk",
		"/Users/errollloyd/Documents/zettelkasten/20200911124758 Projects.mdzk",
		"/Users/errollloyd/Documents/zettelkasten/20200904105632 Python.mdzk",
		"/Users/errollloyd/Documents/zettelkasten/20200831020129 graphical representation.mdzk",
		"/Users/errollloyd/Documents/zettelkasten/20201009182009 remote conventions.mdzk",
		"/Users/errollloyd/Documents/zettelkasten/20201009181855 hub.mdzk",
		"/Users/errollloyd/Documents/zettelkasten/20201009181737 git.mdzk",
		"/Users/errollloyd/Documents/zettelkasten/20200920200115 phd-backup-s3-bucket.mdzk",
		"/Users/errollloyd/Documents/zettelkasten/20200920193136 S3.mdzk",
		"/Users/errollloyd/Documents/zettelkasten/20200920193126 AWS.mdzk",
		"/Users/errollloyd/Documents/zettelkasten/20200920193055 Cloud.mdzk",
		"/Users/errollloyd/Documents/zettelkasten/20200920193037 Technology.mdzk",
		"/Users/errollloyd/Documents/zettelkasten/zettelkasten.sublime-project",
		"/Users/errollloyd/Documents/zettelkasten/20201016154743 GUI.mdzk",
		"/Users/errollloyd/Documents/zettelkasten/20201016154834 tkinter.mdzk",
		"/Users/errollloyd/Documents/zettelkasten/20200927183011 SSH.mdzk",
		"/Users/errollloyd/Documents/zettelkasten/20200911124716 Software.mdzk",
		"/Users/errollloyd/Documents/zettelkasten/20201016154624 Third Party Libraries.mdzk",
		"/Users/errollloyd/Documents/zettelkasten/20201016154509 Standard Library.mdzk",
		"/Users/errollloyd/Documents/zettelkasten/20200831005513 zettelkasten.mdzk",
		"/Users/errollloyd/Documents/zettelkasten/20200831005955 sublime_zk.mdzk",
		"/Users/errollloyd/Documents/zettelkasten/20200831185405 materials_on_note_taking.mdzk",
		"/Users/errollloyd/Library/Application Support/Sublime Text 3/Packages/sublime_zk/sublime_zk.sublime-settings",
		"/Users/errollloyd/Documents/zettelkasten/2020-10-09.md",
		"/Users/errollloyd/Documents/zettelkasten/20200913172139 Text Editor.mdzk",
		"/Users/errollloyd/Documents/zettelkasten/20200913172152 Sublime Text.mdzk",
		"/Users/errollloyd/Documents/zettelkasten/20200904085515 pyconau_2020.mdzk",
		"/Users/errollloyd/Library/Application Support/Sublime Text 3/Packages/User/Markdown.sublime-settings",
		"/Users/errollloyd/Library/Application Support/Sublime Text 3/Packages/User/Markdown (Standard).sublime-settings",
		"/Users/errollloyd/Library/Application Support/Sublime Text 3/Packages/User/sublime_zk.sublime-settings",
		"/Users/errollloyd/Documents/zettelkasten/20200922153002 Academia.mdzk",
		"/Users/errollloyd/Documents/zettelkasten/20200922153027 Publishing.mdzk",
		"/Users/errollloyd/Documents/zettelkasten/20200904114413 Critique.mdzk",
		"/Users/errollloyd/Documents/zettelkasten/20200904114310 Jupyter.mdzk",
		"/Users/errollloyd/Documents/zettelkasten/20200911173013 SQL.mdzk",
		"/Users/errollloyd/Documents/zettelkasten/20200904105724 Conferences.mdzk",
		"/Users/errollloyd/Documents/zettelkasten/.search_results.zkr",
		"/Users/errollloyd/Documents/zettelkasten/.saved_searches.zks",
		"/Users/errollloyd/Library/Application Support/Sublime Text 3/Packages/sublime_zk/sublime_zk.py",
		"/Users/errollloyd/Library/Application Support/Sublime Text 3/Packages/sublime_zk/Main.sublime-menu",
		"/Users/errollloyd/Library/Application Support/Sublime Text 3/Packages/sublime_zk/sublime_zk.sublime-syntax",
		"/Users/errollloyd/Documents/zettelkasten/20200831185115 Book on note taking methods.mdzk",
		"/Users/errollloyd/Library/Application Support/Sublime Text 3/Packages/sublime_zk/Default (OSX).sublime-keymap",
		"/Users/errollloyd/Library/Application Support/Sublime Text 3/Packages/sublime_zk/sublime_zk.sublime-commands",
		"/Users/errollloyd/Documents/zettelkasten/native_test",
		"/Users/errollloyd/Documents/zettelkasten/20200831010012 test.mdzk",
		"/Users/errollloyd/Documents/zettelkasten/202008310029 zk_package.mdzk",
		"/Users/errollloyd/Desktop/delete",
		"/Users/errollloyd/Dropbox/Science/scripts/pyth/HWS/delete.py",
		"/Users/errollloyd/Dropbox/Science/scripts/pyth/HWS/test",
		"/Users/errollloyd/Dropbox/Science/scripts/pyth/HWS/hws_exp.py",
		"/Users/errollloyd/Library/Application Support/Sublime Text 3/Packages/User/Anaconda.sublime-settings",
		"/Users/errollloyd/Library/Application Support/Sublime Text 3/Packages/Anaconda/Anaconda.sublime-settings",
		"/Users/errollloyd/Dropbox/Science/PhD/project_notes/HW_v_Sagar/general_thoughts.md",
		"/Users/errollloyd/Library/Application Support/Sublime Text 3/Packages/User/Projects/HWS #phd.sublime-project",
		"/Users/errollloyd/Dropbox/Science/scripts/pyth/HWS/lif/lif.py",
		"/Users/errollloyd/Dropbox/Science/scripts/pyth/HWS/static_two_layer.py",
		"/Users/errollloyd/Library/Application Support/Sublime Text 3/Packages/User/Projects/soodakRFModel.sublime-project",
		"/Users/errollloyd/Library/Application Support/Sublime Text 3/Packages/PlainTasks/PlainTasks (OSX).sublime-settings",
		"/Users/errollloyd/Library/Application Support/Sublime Text 3/Packages/User/PlainTasks.sublime-settings",
		"/Users/errollloyd/Library/Application Support/Sublime Text 3/Packages/User/Default (OSX).sublime-keymap",
		"/Volumes/MagellanX/PhD/Data/length_tun_data/analysis_functions.py",
		"/Users/errollloyd/Library/Application Support/Sublime Text 3/Packages/ExtendedSwitcher/ExtendedSwitcher.sublime-settings",
		"/Users/errollloyd/Library/Application Support/Sublime Text 3/Packages/Vintage/Default.sublime-keymap",
		"/Users/errollloyd/Library/Application Support/Sublime Text 3/Packages/Vintage/Default (OSX).sublime-keymap",
		"/Users/errollloyd/Library/Application Support/Sublime Text 3/Packages/User/Projects/Zeus.sublime-project",
		"/Users/errollloyd/Dropbox/Science/scripts/pyth/zeus/random",
		"/Users/errollloyd/Dropbox/Science/scripts/pyth/zeus/athena.py",
		"/Users/errollloyd/Dropbox/Science/scripts/pyth/zeus/achilles.py",
		"/Users/errollloyd/Library/Application Support/Sublime Text 3/Packages/User/.gitignore",
		"/Users/errollloyd/Library/Application Support/Sublime Text 3/Packages/ExtendedSwitcher/Default (OSX).sublime-keymap",
		"/Users/errollloyd/Dropbox/Science/scripts/pyth/zeus/.gitignore",
		"/Users/errollloyd/Dropbox/Science/scripts/pyth/zeus/README.md",
		"/Users/errollloyd/Dropbox/Science/scripts/pyth/zeus/athena_zeus.todo",
		"/Users/errollloyd/Library/Application Support/Sublime Text 3/Packages/Git/Git.sublime-settings",
		"/Users/errollloyd/Dropbox/Science/scripts/pyth/zeus/protoZeus.py",
		"/Users/errollloyd/Dropbox/Science/scripts/pyth/zeus/zeus.py",
		"/Users/errollloyd/Dropbox/Science/scripts/pyth/zeus/old_zeus.py",
		"/Users/errollloyd/Library/Application Support/Sublime Text 3/Packages/User/Python.sublime-settings",
		"/Users/errollloyd/Library/Application Support/Sublime Text 3/Packages/Python/Completion Rules.tmPreferences",
		"/Users/errollloyd/Dropbox/Science/scripts/pyth/zeus/hermes.py"
	],
	"find":
	{
		"height": 29.0
	},
	"find_in_files":
	{
		"height": 142.0,
		"where_history":
		[
			""
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"\\par",
			"\\tightlist",
			"bold",
			"\\tightlist",
			"tightlist",
			"gls",
			"\\tightlist",
			"includegraph",
			"\\tightlist",
			"conte",
			"writefile",
			"includegraph",
			"\\\\tightlist",
			"tightlist",
			"}}",
			"doc",
			"chapter"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
			""
		],
		"reverse": false,
		"scrollbar_highlights": true,
		"show_context": true,
		"use_buffer2": true,
		"use_gitignore": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"sheets":
			[
				{
					"buffer": 0,
					"file": "/Users/errollloyd/Science/PhD/thesis/thesis.tex",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1431,
						"regions":
						{
						},
						"selection":
						[
							[
								1029,
								1029
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
									"1":
									[
										1420,
										1428
									]
								},
								"icon":
								{
									"1":
									[
										"Packages/BracketHighlighter/icons/tag.png",
										"region.orangish"
									]
								},
								"open":
								{
									"1":
									[
										987,
										995
									]
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"color_helper.scan":
							{
								"allow_scanning": false,
								"color_class":
								[
									{
										"class": "css-level-4",
										"scopes": ""
									}
								],
								"color_trigger": "(?xi)\n(?:\n    \\b(?<![-#&$])(?:\n        color\\((?!\\s*-)|(?:hsla?|(?:ok)?(?:lch|lab)|hwb|rgba?)\\(\n) |\n\\b(?<![-#&$])[\\w]{3,}(?![(-])\\b|(?<![&])\\#)\n",
								"current_ext": ".tex",
								"current_syntax": "LaTeX/LaTeX",
								"enabled": true,
								"last_updated": 1692772305.55,
								"scanning": "-comment"
							},
							"lsp_uri": "file:///Users/errollloyd/Science/PhD/thesis/thesis.tex",
							"rainbow_checked": true,
							"syntax": "Packages/LaTeX/LaTeX.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 719.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "/Users/errollloyd/Science/PhD/thesis/introduction.tex",
					"selected": true,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1195,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"color_helper.scan":
							{
								"allow_scanning": false,
								"color_class":
								[
									{
										"class": "css-level-4",
										"scopes": ""
									}
								],
								"color_trigger": "(?xi)\n(?:\n    \\b(?<![-#&$])(?:\n        color\\((?!\\s*-)|(?:hsla?|(?:ok)?(?:lch|lab)|hwb|rgba?)\\(\n) |\n\\b(?<![-#&$])[\\w]{3,}(?![(-])\\b|(?<![&])\\#)\n",
								"current_ext": ".tex",
								"current_syntax": "LaTeX/LaTeX",
								"enabled": true,
								"last_updated": 1692772305.55,
								"scanning": "-comment"
							},
							"lsp_uri": "file:///Users/errollloyd/Science/PhD/thesis/introduction.tex",
							"rainbow_checked": true,
							"syntax": "Packages/LaTeX/LaTeX.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "/Users/errollloyd/Science/PhD/thesis/plasticity.tex",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 0,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"color_helper.scan":
							{
								"allow_scanning": false,
								"color_class":
								[
									{
										"class": "css-level-4",
										"scopes": ""
									}
								],
								"color_trigger": "(?xi)\n(?:\n    \\b(?<![-#&$])(?:\n        color\\((?!\\s*-)|(?:hsla?|(?:ok)?(?:lch|lab)|hwb|rgba?)\\(\n) |\n\\b(?<![-#&$])[\\w]{3,}(?![(-])\\b|(?<![&])\\#)\n",
								"current_ext": ".tex",
								"current_syntax": "LaTeX/LaTeX",
								"enabled": true,
								"last_updated": 1692772305.55,
								"scanning": "-comment"
							},
							"lsp_uri": "file:///Users/errollloyd/Science/PhD/thesis/plasticity.tex",
							"rainbow_checked": true,
							"syntax": "Packages/LaTeX/LaTeX.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "/Users/errollloyd/Science/PhD/thesis/hws.tex",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 0,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"color_helper.scan":
							{
								"allow_scanning": false,
								"color_class":
								[
									{
										"class": "css-level-4",
										"scopes": ""
									}
								],
								"color_trigger": "(?xi)\n(?:\n    \\b(?<![-#&$])(?:\n        color\\((?!\\s*-)|(?:hsla?|(?:ok)?(?:lch|lab)|hwb|rgba?)\\(\n) |\n\\b(?<![-#&$])[\\w]{3,}(?![(-])\\b|(?<![&])\\#)\n",
								"current_ext": ".tex",
								"current_syntax": "LaTeX/LaTeX",
								"enabled": true,
								"last_updated": 1692772305.55,
								"scanning": "-comment"
							},
							"lsp_uri": "file:///Users/errollloyd/Science/PhD/thesis/hws.tex",
							"rainbow_checked": true,
							"syntax": "Packages/LaTeX/LaTeX.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"stack_multiselect": false,
					"type": "text"
				}
			]
		},
		{
			"sheets":
			[
			]
		}
	],
	"incremental_find":
	{
		"height": 42.0
	},
	"input":
	{
		"height": 62.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			],
			[
				1,
				0,
				2,
				1
			]
		],
		"cols":
		[
			0.0,
			0.5,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.LSP Log Panel":
	{
		"height": 0.0
	},
	"output.Terminus":
	{
		"height": 346.0
	},
	"output.diagnostics":
	{
		"height": 307.0
	},
	"output.exec":
	{
		"height": 353.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"output.language servers":
	{
		"height": 0.0
	},
	"output.mdpopups":
	{
		"height": 0.0
	},
	"pinned_build_system": "",
	"project": "thesis #phd.sublime-project",
	"replace":
	{
		"height": 54.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"hws",
				"thesis #phd/old/hws.tex"
			],
			[
				"plast",
				"thesis #phd/old/plasticity.tex"
			],
			[
				"fi",
				"prototype/20211019103824 first_note.md"
			],
			[
				"zk",
				"20200831005955 sublime_zk.mdzk"
			],
			[
				"zett",
				"zettelkasten.sublime-project"
			],
			[
				"py",
				"20200904105632 Python.mdzk"
			],
			[
				"cust",
				"20201009191618 Custom Addtions.mdzk"
			],
			[
				"sof",
				"20200911124716 Software.mdzk"
			],
			[
				"pyth",
				"20200904105632 Python.mdzk"
			],
			[
				"bra",
				"20201009182253 Listing branches and remotes.mdzk"
			],
			[
				"git",
				"20201009181737 git.mdzk"
			],
			[
				"aws",
				"20200920193126 AWS.mdzk"
			],
			[
				"soft",
				"20200911124716 Software.mdzk"
			],
			[
				"",
				".search_results.zkr"
			],
			[
				"gen",
				"notes/general_thoughts.md"
			],
			[
				"lif",
				"code/lif/lif.py"
			],
			[
				"stat",
				"HWS #phd/static_two_layer.py"
			],
			[
				"the",
				"themis.py"
			],
			[
				"heph",
				"hephaistos.py"
			],
			[
				"her",
				"hermes.py"
			],
			[
				"qui",
				"/Volumes/MagellanX/PhD/Data/length_tun_data/quick_run.py"
			],
			[
				"ath",
				"zeus/athena.py"
			],
			[
				"at",
				"zeus/athena_themis.todo"
			],
			[
				"th",
				"themis.py"
			],
			[
				"aht",
				"athena_themis.todo"
			],
			[
				"ol",
				"zeus/old_zeus.py"
			],
			[
				"pr",
				"zeus/protoZeus.py"
			],
			[
				"ze",
				"zeus/zeus.py"
			],
			[
				"zu",
				"zeus/zeus.py"
			],
			[
				"pro",
				"zeus/protoZeus.py"
			],
			[
				"qu",
				"spike2_workflow_test/hephaistos_testing/u1_r1.smrx/quickViewProto.py"
			],
			[
				"s",
				"zeus/spk2_mat_read.py"
			],
			[
				"z",
				"zeus/zeus.py"
			],
			[
				"hep",
				"zeus/hephaistos.py"
			],
			[
				"todo ",
				"project_notes/todo_check_files"
			],
			[
				"phd ",
				"project_notes/phd_timeline.todo.html"
			],
			[
				"hel",
				"git/helpers.csv"
			],
			[
				"2018",
				"RB_general/2018_10_19_hours.csv"
			],
			[
				"to",
				"project_notes/todo_check.sh"
			],
			[
				"todo",
				"project_notes/todo_check_files"
			],
			[
				"reg",
				"git/regex_test.todo"
			],
			[
				"hou",
				"RB_general/2018_10_05_hours.csv"
			],
			[
				"20",
				"RB_general/2018_09_21_hours.csv"
			],
			[
				"prog",
				"project_notes/prog_review_3.5.md"
			],
			[
				"test",
				"RB_general/test"
			],
			[
				"work",
				"git/workshop_materials.todo"
			],
			[
				"v",
				"Scripts/vcnl_analysis.py"
			],
			[
				"rfd",
				"Scripts/rfDistCalc.py"
			],
			[
				"loc",
				"loc_1_var.csv"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_symbol":
	{
		"height": 392.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"criticl",
				"tag-critical"
			],
			[
				"",
				"Abbot:2011fd"
			]
		],
		"width": 592.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": true,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 277.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
